{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-status-filter/item-status-filter.js","components/add-item/add-item.js","components/App/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","React","Component","TodoListItem","label","onDelete","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","obj","clazz","filter","onFilterChange","AddItem","onLabelChange","onSubmit","preventDefault","onAdd","App","maxId","createTodoItem","deleteItem","todoData","i","addItem","text","newItem","toggleProperty","arr","propName","idx","findIndex","el","oldItem","slice","search","items","length","toLowerCase","indexOf","visibleItems","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e1a43ad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) =>{ //All components MUST be created with a uppercase letter! To distinguish between our components and usual HTML tags.\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nclass SearchPanel extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onSearchChange = (e) => {\r\n            const term = e.target.value;\r\n            this.setState({term});\r\n            this.props.onSearchChange(term);\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <input type=\"text\" className=\"form-control search-input\" placeholder={\"type to search\"} value={this.state.term} onChange={this.onSearchChange}></input>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nclass TodoListItem extends React.Component {\r\n\r\n    // constructor(){\r\n    //     super();\r\n    //     // this.onLabelClick = () => { //kogda menjaem toljko odin raz, mozhno peredovatj srazu objekt\r\n    //     //     this.setState({\r\n    //     //         done: !this.state.done\r\n    //     //     });\r\n    //     // }\r\n    //     // this.onLabelClick = () => { //kogda perekljuchaem chto to, to togda peredajem funkciju. Eto iz za asinhronnosti, chtob ne bilo owibok\r\n    //     //     this.setState((state) =>{\r\n    //     //         return {\r\n    //     //             done: !state.done\r\n    //     //         };\r\n    //     //     });\r\n    //     // }\r\n    // }\r\n\r\n    render(){\r\n        const {label, onDelete, onToggleImportant, onToggleDone, important, done} = this.props; //creates variable label and assigns value from this.props.label to it! Destructuring\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if(important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return ( // Name can be anything instead of props. It contails all properties.\r\n            <span className={classNames}>\r\n                <span className=\"todo-list-item-label\" onClick={onToggleDone}>{label}</span>\r\n        \r\n                <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\" onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-exclamation\"></i>\r\n                </button>\r\n                    \r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\" onClick={onDelete}> {/* or just put this.props.onDelete if without destructuring */}\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                </button>\r\n            </span> //destructuring props object from props.label\r\n        );\r\n    };\r\n}\r\n\r\nexport default TodoListItem;\r\n\r\n// const TodoListItem = ({label, important = false}) => { //destructuring props object. Props object is passed in every component as first argument.\r\n//     const style = {\r\n//         color: important ? 'steelblue' : 'black',\r\n//         fontWeight: important ? 'bold' : 'normal'\r\n//     };\r\n//     return ( // Name can be anything instead of props. It contails all properties.\r\n//         <span className=\"todo-list-item\">\r\n//             <span className=\"todo-list-item-label\" style={style}>{label}</span>\r\n\r\n//             <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\">\r\n//                 <i className=\"fa fa-exclamation\"></i>\r\n//             </button>\r\n            \r\n//             <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\">\r\n//                 <i className=\"fa fa-trash-o\"></i>\r\n//             </button>\r\n//         </span> //destructuring props object from props.label\r\n//     );\r\n// };\r\n\r\n// export default TodoListItem;\r\n//-----------------------------------------------------------------------------------------------------------------------------------------\r\n// const TodoListItem = (props) => {\r\n//     const style = {\r\n//         color: props.important ? 'tomato' : 'black'\r\n//     };\r\n//     return (\r\n//         <span style={style}>{props.label}</span>\r\n//     );\r\n// };","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({todos, onDelete, onToggleImportant, onToggleDone}) => { //destructuring props.todos\r\n\r\n    const elements = todos.map((item)=>{\r\n\r\n        const {id, ...itemProps} = item; //id saved to id. The rest of not destructured parameters from item are saved to itemProps.\r\n\r\n        return(\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem {...itemProps}\r\n                onDelete = {() => onDelete(id)}\r\n                onToggleImportant={()=>onToggleImportant(id)}\r\n                onToggleDone={()=>onToggleDone(id)}\r\n                />\r\n            </li> //Now id parameter is not passed to the TodoListItem!\r\n        );\r\n    });\r\n\r\n    return ( //React works so fast because it creates LIGHT objects that have not so many propetries compared to objects created by using Vanilla JS.\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n\r\n// const TodoList = ({todos}) => { //destructuring props.todos\r\n//     return ( //React works so fast because it creates LIGHT objects that have not so many propetries compared to objects created by using Vanilla JS.\r\n//         <ul>\r\n//             <li><TodoListItem label={todos[0].label} important={todos[0].important} /></li>\r\n//             <li><TodoListItem label={todos[1].label} important={todos[1].important} /></li>\r\n//             <li><TodoListItem label={todos[2].label} important={todos[2].important} /></li>\r\n//         </ul>\r\n//     );\r\n// };\r\n//------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n// const TodoList = ({todos}) => { //destructuring props.todos\r\n\r\n//     const elements = todos.map((item)=>{\r\n//         return(\r\n//             <li><TodoListItem label={item.label} important={item.important} /></li> // Spread operator can be used if property name matches with objects name. : ...item\r\n//         );\r\n//     });\r\n\r\n//     return ( //React works so fast because it creates LIGHT objects that have not so many propetries compared to objects created by using Vanilla JS.\r\n//         <ul>\r\n//             {elements}\r\n//         </ul>\r\n//     );\r\n// };","import React from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nclass ItemStatusFilter extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.buttons = [\r\n            {name: 'all', label: 'All'},\r\n            {name: 'active', label: 'Active'},\r\n            {name: 'done', label: 'Done'}\r\n        ];\r\n    };\r\n    render(){\r\n        const buttons = this.buttons.map((obj) => {\r\n            const isActive = this.props.filter === obj.name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button type=\"button\" className={`btn ${clazz}`} key={obj.name} onClick={()=>this.props.onFilterChange(obj.name)}>{obj.label}</button>\r\n            )\r\n        });\r\n\r\n        return(\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\nexport default ItemStatusFilter;\r\n\r\n// const ItemStatusFilter = () => {\r\n//     return(\r\n//         <div className=\"btn-group\">\r\n//             <button type=\"button\" className=\"btn btn-info\">All</button>\r\n//             <button type=\"button\" className=\"btn btn-outline-secondary\">Active</button>\r\n//             <button type=\"button\" className=\"btn btn-outline-secondary\">Done</button>\r\n//         </div>\r\n//     )\r\n// };\r\n\r\n// export default ItemStatusFilter;","import React from 'react';\r\n\r\nimport './add-item.css';\r\n\r\nclass AddItem extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.onLabelChange = (e) => {\r\n            this.setState({\r\n                label: e.target.value\r\n            })\r\n        };\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.onAdd(this.state.label);\r\n            this.setState({\r\n                label: ''\r\n            });\r\n        };\r\n        this.state = {\r\n            label: ''\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form className=\"additem d-flex\" onSubmit={this.onSubmit}>\r\n                <input type=\"text\" className=\"form-control\" onChange={this.onLabelChange} placeholder=\"What needs to be done\" value={this.state.label}></input>\r\n                <button className=\"btn btn-outline-secondary\">Add Item</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItem;","import React from 'react';\r\n\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport AddItem from '../add-item/add-item';\r\nimport './app.css';\r\n\r\n//const el = <h1>Hello World</h1>; //Webpack runs Babel that turns the JSX code into the JS code. All of this is configured by default when you create a project with 'npm create-react-app'\r\n//const el = React.createElement('h1',null, 'Hello World!');\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.maxId = 100;\r\n        \r\n        this.createTodoItem = (label) => {\r\n            return {\r\n                label,\r\n                important: false,\r\n                done: false,\r\n                id: this.maxId++\r\n            }\r\n        }\r\n        this.deleteItem = (id) =>{\r\n            this.setState((state) => {\r\n                //const idx = state.todoData.findIndex((el)=> el.id === id);\r\n                const newData = state.todoData.filter(i => i.id !== id);\r\n                return {\r\n                    todoData: newData\r\n                }\r\n            });\r\n        };\r\n        this.addItem = (text) =>{\r\n            const newItem = this.createTodoItem(text);\r\n            this.setState((state)=>{\r\n                const newArr = [...state.todoData, newItem];\r\n                return{\r\n                    todoData: newArr\r\n                }\r\n            })\r\n        };\r\n        this.toggleProperty = (arr,id,propName) =>{\r\n            const idx = arr.findIndex((el)=> el.id === id);\r\n                const oldItem = arr[idx];\r\n                const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n                return [...arr.slice(0,idx),newItem,...arr.slice(idx+1)];\r\n        };\r\n        this.onToggleDone = (id) => {\r\n            this.setState((state)=>{\r\n                return{\r\n                    todoData: this.toggleProperty(state.todoData, id, 'done')\r\n                }\r\n                // const idx = state.todoData.findIndex((el)=> el.id === id);\r\n                // const oldItem = state.todoData[idx];\r\n                // const newItem = {...oldItem, done: !oldItem.done};\r\n                // const newArr = [...state.todoData.slice(0,idx),newItem,...state.todoData.slice(idx+1)];\r\n                // return{\r\n                //     todoData: newArr\r\n                // }\r\n            });\r\n        };\r\n        this.onToggleImportant = (id) => {\r\n            this.setState((state)=>{\r\n                return{\r\n                    todoData: this.toggleProperty(state.todoData, id, 'important')\r\n                }\r\n            });\r\n        }\r\n        this.search = (items, term) => {\r\n            if(term.length===0){\r\n                return items;\r\n            };\r\n\r\n            return items.filter((i) => {\r\n                return i.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n            });\r\n        };\r\n        this.onSearchChange = (term) => {\r\n            this.setState({term});\r\n        };\r\n        this.filter = (items, filter) => {\r\n            switch(filter){\r\n                case 'all':\r\n                    return items;\r\n                case 'active':\r\n                    return items.filter(i => !i.done)\r\n                case 'done':\r\n                    return items.filter(i => i.done)\r\n                default:\r\n                   return items \r\n            }\r\n        };\r\n        this.onFilterChange = (filter) => {\r\n            this.setState({filter});\r\n        };\r\n        this.state = {\r\n            todoData: [\r\n                this.createTodoItem('Drink Coffee'),\r\n                this.createTodoItem('Work'),\r\n                this.createTodoItem('Have a lunch')\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const visibleItems = this.filter(this.search(this.state.todoData, this.state.term), this.state.filter);\r\n        const doneCount = this.state.todoData.filter((i)=> i.done===true).length;\r\n        const todoCount = this.state.todoData.length - doneCount;\r\n\r\n        return( //JSX when written in multiple lines MUST be taken into the '(JSX goes here)'!\r\n        <div className=\"todo-app\">\r\n            <AppHeader toDo={todoCount} done={doneCount} />\r\n            <div className=\"top-panel d-flex\">\r\n                <SearchPanel onSearchChange={this.onSearchChange} />\r\n                <ItemStatusFilter filter ={this.state.filter} onFilterChange={this.onFilterChange} />\r\n            </div>\r\n            <TodoList todos={visibleItems} onDelete={this.deleteItem} onToggleImportant={this.onToggleImportant} onToggleDone={this.onToggleDone}/>\r\n            <AddItem onAdd={this.addItem} />\r\n        </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/app';\n\nReactDOM.render(<App />, document.getElementById('root')); //It turns VIRTUAL DOM into the true DOM wich browser can show."],"sourceRoot":""}